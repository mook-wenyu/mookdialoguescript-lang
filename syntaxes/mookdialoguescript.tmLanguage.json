{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "MookDialogueScript",
	"patterns": [
		{
			"include": "#comments"
		},
		{
			"include": "#node_blocks"
		},
		{
			"include": "#node_definitions"
		},
		{
			"include": "#node_endings"
		},
		{
			"include": "#metadata"
		},
		{
			"include": "#keywords"
		},
		{
			"include": "#jumps"
		},
		{
			"include": "#condition_expressions"
		},
		{
			"include": "#choices"
		},
		{
			"include": "#narration"
		},
		{
			"include": "#dialogues"
		},
		{
			"include": "#tags"
		},
		{
			"include": "#variables"
		},
		{
			"include": "#string_interpolation"
		},
		{
			"include": "#operators"
		},
		{
			"include": "#functions"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#numbers"
		}
	],
	"repository": {
		"comments": {
			"patterns": [
				{
					"name": "comment.line.double-slash.mookdialoguescript",
					"match": "^\\s*//.*$"
				}
			]
		},
		"node_blocks": {
			"patterns": [
				{
					"name": "meta.node.block.mookdialoguescript",
					"begin": "^\\s*(---)\\s*([A-Za-z0-9_\\u4e00-\\u9fa5]+)\\s*$",
					"beginCaptures": {
						"1": {
							"name": "keyword.control.mookdialoguescript"
						},
						"2": {
							"name": "entity.name.class.mookdialoguescript"
						}
					},
					"end": "^\\s*(===)\\s*$",
					"endCaptures": {
						"1": {
							"name": "keyword.control.mookdialoguescript"
						}
					},
					"patterns": [
						{
							"include": "#metadata"
						},
						{
							"include": "#comments"
						},
						{
							"include": "#keywords"
						},
						{
							"include": "#jumps"
						},
						{
							"include": "#condition_expressions"
						},
						{
							"include": "#choices"
						},
						{
							"include": "#dialogues"
						},
						{
							"include": "#tags"
						},
						{
							"include": "#variables"
						},
						{
							"include": "#string_interpolation"
						},
						{
							"include": "#operators"
						},
						{
							"include": "#functions"
						},
						{
							"include": "#strings"
						},
						{
							"include": "#numbers"
						}
					]
				}
			]
		},
		"node_definitions": {
			"patterns": [
				{
					"name": "entity.name.section.mookdialoguescript",
					"match": "^\\s*(::|：：)\\s*([A-Za-z0-9_\\u4e00-\\u9fa5]+)",
					"captures": {
						"1": {
							"name": "punctuation.definition.bold.mookdialoguescript"
						},
						"2": {
							"name": "entity.name.class.mookdialoguescript"
						}
					}
				},
				{
					"name": "entity.name.section.mookdialoguescript",
					"match": "^\\s*(---)\\s*([A-Za-z0-9_\\u4e00-\\u9fa5]+)",
					"captures": {
						"1": {
							"name": "punctuation.definition.bold.mookdialoguescript"
						},
						"2": {
							"name": "entity.name.class.mookdialoguescript"
						}
					}
				}
			]
		},
		"node_endings": {
			"patterns": [
				{
					"name": "entity.name.section.end.mookdialoguescript",
					"match": "^\\s*(===)\\s*$",
					"captures": {
						"1": {
							"name": "punctuation.definition.bold.mookdialoguescript"
						}
					}
				}
			]
		},
		"dialogues": {
			"patterns": [
				{
					"name": "meta.dialogue.line.mookdialoguescript",
					"begin": "^\\s*([A-Za-z0-9_\\u4e00-\\u9fa5]+)\\s*(?<!\\\\)(:|：)",
					"end": "$",
					"beginCaptures": {
						"1": {
							"name": "entity.name.class.mookdialoguescript"
						},
						"2": {
							"name": "punctuation.definition.bold.mookdialoguescript"
						}
					},
					"contentName": "block.scope.end.mookdialoguescript",
					"patterns": [
						{
							"include": "#keywords"
						},
						{
							"include": "#string_interpolation"
						},
						{
							"include": "#tags"
						},
						{
							"name": "constant.character.escape.mookdialoguescript",
							"match": "\\\\[:\\[\\]#：]"
						}
					]
				},
				{
					"name": "meta.dialogue.content.mookdialoguescript",
					"begin": "^\\s*(?!(::|\\\"|'|(?<!\\\\)\\[|\\-|\\$|\\w+(?<!\\\\):|\\w+(?<!\\\\)：|if|elif|else|endif|var|set|add|sub|mul|div|mod|call|wait|jump|=>|=》|(?<!\\\\):|(?<!\\\\)：))",
					"end": "$",
					"contentName": "block.scope.end.mookdialoguescript",
					"patterns": [
						{
							"include": "#keywords"
						},
						{
							"include": "#string_interpolation"
						},
						{
							"include": "#tags"
						},
						{
							"name": "constant.character.escape.mookdialoguescript",
							"match": "\\\\[:\\[\\]#：]"
						}
					]
				}
			]
		},
		"narration": {
			"patterns": [
				{
					"name": "meta.narration.mookdialoguescript",
					"begin": "^\\s*((?<!\\\\)(:|：))",
					"end": "$",
					"beginCaptures": {
						"1": {
							"name": "punctuation.definition.bold.mookdialoguescript"
						}
					},
					"contentName": "block.scope.end.mookdialoguescript",
					"patterns": [
						{
							"include": "#keywords"
						},
						{
							"include": "#string_interpolation"
						},
						{
							"include": "#tags"
						},
						{
							"name": "constant.character.escape.mookdialoguescript",
							"match": "\\\\[:\\[\\]#：]"
						}
					]
				}
			]
		},
		"choices": {
			"patterns": [
				{
					"name": "meta.choice.line.mookdialoguescript",
					"begin": "^\\s*(\\->|\\-》)\\s*",
					"end": "(?=\\s*\\[|$)",
					"beginCaptures": {
						"1": {
							"name": "punctuation.definition.bold.mookdialoguescript"
						}
					},
					"contentName": "block.scope.end.mookdialoguescript",
					"patterns": [
						{
							"include": "#string_interpolation"
						},
						{
							"include": "#tags"
						},
						{
							"name": "constant.character.escape.mookdialoguescript",
							"match": "\\\\[:\\[\\]#：]"
						}
					]
				}
			]
		},
		"jumps": {
			"patterns": [
				{
					"name": "meta.jump.mookdialoguescript",
					"match": "^\\s*(=>|=》|\\bjump\\b)\\s*([A-Za-z0-9_\\u4e00-\\u9fa5]+)",
					"captures": {
						"1": {
							"name": "keyword.control.command.mookdialoguescript"
						},
						"2": {
							"name": "entity.name.class.mookdialoguescript"
						}
					}
				}
			]
		},
		"keywords": {
			"patterns": [
				{
					"name": "keyword.control.mookdialoguescript",
					"match": "^\\s*\\b(if|elif|else|endif|var|set|add|sub|mul|div|mod|call|wait)\\b|\\b(true|false)\\b"
				},
				{
					"name": "keyword.operator.word.mookdialoguescript",
					"match": "\\b(eq|is|neq|gt|lt|gte|lte|and|or|not|xor)\\b"
				}
			]
		},
		"tags": {
			"patterns": [
				{
					"name": "meta.tag.mookdialoguescript",
					"match": "(?<!\\\\)(#)([A-Za-z0-9_\\u4e00-\\u9fa5]+)",
					"captures": {
						"1": {
							"name": "comment.line.double-slash.mookdialoguescript"
						},
						"2": {
							"name": "variable.parameter.function.mookdialoguescript"
						}
					}
				},
				{
					"name": "constant.character.escape.mookdialoguescript",
					"match": "\\\\#"
				}
			]
		},
		"variables": {
			"patterns": [
				{
					"name": "variable.other.mookdialoguescript",
					"match": "\\$[A-Za-z0-9_\\u4e00-\\u9fa5]+"
				}
			]
		},
		"expressions": {
			"patterns": [
				{
					"include": "#keywords"
				},
				{
					"include": "#functions"
				},
				{
					"include": "#variables"
				},
				{
					"include": "#operators"
				},
				{
					"include": "#numbers"
				},
				{
					"include": "#strings"
				}
			]
		},
		"string_interpolation": {
			"patterns": [
				{
					"name": "meta.interpolation.mookdialoguescript",
					"begin": "(?<!\\\\)\\{",
					"beginCaptures": {
						"0": {
							"name": "support.other.parenthesis.regexp.mookdialoguescript"
						}
					},
					"end": "(?<!\\\\)\\}",
					"endCaptures": {
						"0": {
							"name": "support.other.parenthesis.regexp.mookdialoguescript"
						}
					},
					"patterns": [
						{
							"include": "#expressions"
						}
					]
				},
				{
					"name": "constant.character.escape.mookdialoguescript",
					"match": "\\\\[\\{\\}]"
				}
			]
		},
		"functions": {
			"patterns": [
				{
					"name": "meta.function-call.mookdialoguescript",
					"begin": "\\b([A-Za-z0-9_\\u4e00-\\u9fa5]+)\\s*(\\()",
					"beginCaptures": {
						"1": {
							"name": "entity.name.function.mookdialoguescript"
						},
						"2": {
							"name": "support.other.parenthesis.regexp.mookdialoguescript"
						}
					},
					"end": "\\)",
					"endCaptures": {
						"0": {
							"name": "support.other.parenthesis.regexp.mookdialoguescript"
						}
					},
					"patterns": [
						{
							"include": "#expressions"
						}
					]
				}
			]
		},
		"condition_expressions": {
			"patterns": [
				{
					"name": "meta.condition.mookdialoguescript",
					"begin": "(?<!\\\\)\\[\\s*",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.condition.begin.mookdialoguescript"
						}
					},
					"end": "\\s*(?<!\\\\)\\]",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.condition.end.mookdialoguescript"
						}
					},
					"patterns": [
						{
							"match": "\\bif\\b",
							"name": "keyword.control.conditional.mookdialoguescript"
						},
						{
							"include": "#expressions"
						},
						{
							"name": "constant.character.escape.mookdialoguescript",
							"match": "\\\\[\\[\\]]"
						}
					]
				},
				{
					"name": "meta.condition.if-block.mookdialoguescript",
					"begin": "^\\s*(if)\\b",
					"beginCaptures": {
						"1": {
							"name": "keyword.control.conditional.mookdialoguescript"
						}
					},
					"end": "$",
					"patterns": [
						{
							"include": "#expressions"
						}
					]
				},
				{
					"name": "meta.condition.elif-block.mookdialoguescript",
					"begin": "^\\s*(elif)\\b",
					"beginCaptures": {
						"1": {
							"name": "keyword.control.conditional.mookdialoguescript"
						}
					},
					"end": "$",
					"patterns": [
						{
							"include": "#expressions"
						}
					]
				},
				{
					"name": "meta.condition.else-block.mookdialoguescript",
					"match": "^\\s*(else)\\b",
					"captures": {
						"1": {
							"name": "keyword.control.conditional.mookdialoguescript"
						}
					}
				},
				{
					"name": "meta.condition.endif-block.mookdialoguescript",
					"match": "^\\s*(endif)\\b",
					"captures": {
						"1": {
							"name": "keyword.control.conditional.mookdialoguescript"
						}
					}
				}
			]
		},
		"operators": {
			"patterns": [
				{
					"name": "keyword.operator.mookdialoguescript",
					"match": "(==|!=|>=|<=|>|<|&&|\\|\\||\\+|-|\\*|/|%|=|!)"
				}
			]
		},
		"strings": {
			"patterns": [
				{
					"name": "string.quoted.double.mookdialoguescript",
					"begin": "\"",
					"end": "\"",
					"patterns": [
						{
							"include": "#string_interpolation"
						},
						{
							"name": "constant.character.escape.mookdialoguescript",
							"match": "\\\\."
						}
					]
				},
				{
					"name": "string.quoted.single.mookdialoguescript",
					"begin": "'",
					"end": "'",
					"patterns": [
						{
							"include": "#string_interpolation"
						},
						{
							"name": "constant.character.escape.mookdialoguescript",
							"match": "\\\\."
						}
					]
				}
			]
		},
		"numbers": {
			"name": "constant.numeric.mookdialoguescript",
			"match": "\\b[0-9]+(\\.[0-9]+)?\\b"
		},
		"metadata": {
			"patterns": [
				{
					"name": "meta.metadata.title.mookdialoguescript",
					"match": "(\\[|【)(title)(\\s*)(:|：)(\\s*)([^\\]】]+)(\\]|】)",
					"captures": {
						"1": {
							"name": "keyword.control.mookdialoguescript"
						},
						"2": {
							"name": "block.scope.begin.mookdialoguescript"
						},
						"4": {
							"name": "constant.mookdialoguescript"
						},
						"6": {
							"name": "entity.name.class.mookdialoguescript"
						},
						"7": {
							"name": "keyword.control.mookdialoguescript"
						}
					}
				},
				{
					"name": "meta.metadata.mookdialoguescript",
					"match": "(\\[|【)([^:\\]】]+)(\\s*)(:|：)(\\s*)([^\\]】]+)(\\]|】)",
					"captures": {
						"1": {
							"name": "keyword.control.mookdialoguescript"
						},
						"2": {
							"name": "block.scope.begin.mookdialoguescript"
						},
						"4": {
							"name": "constant.mookdialoguescript"
						},
						"6": {
							"name": "rgb-value.mookdialoguescript"
						},
						"7": {
							"name": "keyword.control.mookdialoguescript"
						}
					}
				}
			]
		}
	},
	"scopeName": "source.mds"
}